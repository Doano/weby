stages:
  - build-publish
  - publish-with-precompile

variables:  # https://docs.gitlab.com/ee/ci/variables/
  DOCKER_TLS_CERTDIR: ""
  CI_BRANCH_ENV: $CI_COMMIT_BRANCH
  CI_PROJECT_ENV: ${CI_PROJECT_NAME}_${CI_BRANCH_ENV}
  CI_VERSION_ENV: "1.4.1"
  CI_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA
  RAILS_ENV: $RAILS_ENV
  SECRET_KEY_BASE: $SECRET_KEY_BASE
  STORAGE_BUCKET: $STORAGE_BUCKET
  STORAGE_ACCESS_KEY: $STORAGE_ACCESS_KEY
  STORAGE_ACCESS_SECRET: $STORAGE_ACCESS_SECRET
  STORAGE_HOST: $STORAGE_HOST

before_script:
  - cp $ENV_FILE .env

build-publish:
  stage: build-publish
  image: docker
  services:
    - docker:dind
  environment:
    name: $CI_COMMIT_REF_NAME
  tags:
    - ssh
  only:
    - master
    - develop
  script:
    - docker-compose --project-directory . -f docker/docker-compose.yml --env-file docker/.env build
    #- echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    #- docker tag $CI_PROJECT_ENV:$CI_VERSION_ENV $CI_REGISTRY_IMAGE/$CI_PROJECT_ENV:$CI_VERSION_ENV
    #- docker push $CI_REGISTRY_IMAGE/$CI_PROJECT_ENV:$CI_VERSION_ENV

publish-with-precompile:
  stage: publish-with-precompile
  image: docker
  services:
    - docker:dind
  environment:
    name: $CI_COMMIT_REF_NAME
  tags:
    - ssh
  only:
    - master
    - develop
  #dependencies:
  #  - build-publish
  script:
    - COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1
      docker-compose --project-directory docker 
      -f docker/docker-compose.yml
      --env-file docker/.env build
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker tag $CI_PROJECT_ENV:$CI_VERSION_ENV $CI_REGISTRY_IMAGE/$CI_PROJECT_ENV:$CI_VERSION_ENV
    - docker push $CI_REGISTRY_IMAGE/$CI_PROJECT_ENV:$CI_VERSION_ENV
  when: manual
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - public/assets/.sprockets-manifest-*.json
